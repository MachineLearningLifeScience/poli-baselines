[tox]
env_list =
    lint
    poli-baselines-base-py310
    poli-baxus-base-py310
    poli-ax-base-py310
    poli-alebo-base-py310
    poli-pr-base-py310
    poli-bounce-base-py310
minversion = 4.10.0

[testenv]
description = run the tests with pytest
package = wheel
wheel_build_env = .pkg
deps =
    pytest>=6
    -r./requirements-dev.txt
    -r./requirements.txt
commands =
    pytest {tty:--color=yes} -v {posargs}


[testenv:lint]
description = check the code style with black
deps =
    black
commands =
    black --check --diff {posargs:.}

[testenv:poli-baselines-base-py310]
description = run the tests with pytest on the base environment for poli
basepython = python3.10
wheel_build_env = .pkg
deps=
    {[testenv]deps}
    -e.
commands=
    {[testenv]commands} -m "not baxus and not ax_solvers"

[testenv:poli-baxus-base-py310]
description = runs the test for baxus environment creation and solver execution
basepython = python3.10
wheel_build_env = .pkg
deps = 
    {[testenv]deps}
    -e.[baxus]
commands =
    pytest {tty:--color=yes} -v src/poli_baselines/tests/solvers/bayesian_optimization/test_baxus.py {posargs}

[testenv:poli-ax-base-py310]
description = runs the test for ax-related environment creation and solver execution
basepython = python3.10
wheel_build_env = .pkg
deps = 
    {[testenv]deps}
    -e.[ax]
commands =
    pytest {tty:--color=yes} -v src/poli_baselines/tests/solvers/bayesian_optimization/test_ax_solvers.py  {posargs}

[testenv:poli-alebo-base-py310]
description = runs the test for the ALEBO solver
basepython = python3.10
wheel_build_env = .pkg
deps =
    {[testenv]deps}
    -e.[alebo]
commands =
    pytest {tty:--color=yes} -v src/poli_baselines/tests/solvers/bayesian_optimization/test_alebo.py  {posargs}

[testenv:poli-pr-base-py310]
description = runs the test for the creation and solver execution of Prob. Rep.
basepython = python3.10
wheel_build_env = .pkg
deps =
    {[testenv]deps}
    -e.[pr]
commands =
    pytest {tty:--color=yes} -v src/poli_baselines/tests/solvers/bayesian_optimization/test_pr.py  {posargs}

[testenv:poli-bounce-base-py310]
description = runs the test for the creation and solver execution of Bounce
basepython = python3.10
wheel_build_env = .pkg
deps =
    {[testenv]deps}
    -e.[bounce]
commands =
    pytest {tty:--color=yes} -v src/poli_baselines/tests/solvers/bayesian_optimization/test_bounce.py  {posargs}

[testenv:poli-lambo2-base-py310]
description = runs the test for the creation and solver execution of Bounce
basepython = python3.10
wheel_build_env = .pkg
deps =
    {[testenv]deps}
    -e.[lambo2]
commands =
    pytest {tty:--color=yes} -v src/poli_baselines/tests/solvers/bayesian_optimization/test_lambo2.py  {posargs}
